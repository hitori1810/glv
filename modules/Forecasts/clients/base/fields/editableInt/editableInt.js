/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/
({extendsFrom:'IntField',events:{'mouseenter span.editable':'togglePencil','mouseleave span.editable':'togglePencil','click span.editable':'onClick','blur span.edit input':'onBlur','keyup span.edit input':'onKeyup'},inputSelector:'span.edit input',errorMessage:'',isErrorState:false,_canEdit:true,initialize:function(options){app.view.fields.IntField.prototype.initialize.call(this,options);this.checkIfCanEdit();},checkIfCanEdit:function(){var selectedUser=this.context.forecasts.get('selectedUser');if(!_.isUndefined(this.context.forecasts)&&!_.isUndefined(this.context.forecasts.config)){this._canEdit=_.isEqual(app.user.get('id'),selectedUser.id)&&!_.contains(this.context.forecasts.config.get("sales_stage_won").concat(this.context.forecasts.config.get("sales_stage_lost")),this.model.get('sales_stage'));}},bindDomChange:function(){},bindDataChange:function(){var self=this;self.context.on('field:editable:open',function(){if(self.isErrorState){self.context.trigger('field:editable:error',self.cid);}},self);self.context.on('field:editable:error',function(cid){if(!_.isEqual(cid,self.cid)&&this.options.viewName=='edit'){self.renderDetail();}},self);},handleEvent:function(evt){if(!_.isObject(evt)||this.options.viewName!='edit'||!this.isEditable()||!(this.model instanceof Backbone.Model)){return false;}
var self=this;var el=this.$el.find(self.fieldTag);if(!_.isEqual(self.$el.find(self.inputSelector).val(),self.model.get(this.name))){var value=self.parsePercentage(self.$el.find(self.inputSelector).val()),errorObj=self.isValid(value);if(!_.isObject(errorObj)){self.model.set(self.name,self.unformat(value));self.renderDetail();}else{self.isErrorState=true;var hb=Handlebars.compile("{{str_format key module args}}");self.errorMessage=hb({'key':errorObj.labelId,'module':'Forecasts','args':errorObj.args});self.showErrors();self.$el.find(self.inputSelector).focus().select();}
if($.browser.msie&&el.is("input")){el.on("input",function(){el.focus();});}}else{self.renderDetail();}
return true;},renderDetail:function(){this.isErrorState=false;this.options.viewName='detail';this.render();},togglePencil:function(evt){evt.preventDefault();if(!this.isEditable())return;if(evt.type=='mouseenter'){this.$el.find('.edit-icon').removeClass('hide');this.$el.find('.edit-icon').addClass('show');}else{this.$el.find('.edit-icon').removeClass('show');this.$el.find('.edit-icon').addClass('hide');}},onClick:function(evt){evt.preventDefault();if(!this.isEditable())return;this.options.viewName='edit';this.render();this.$el.find(this.inputSelector).focus().select();this.context.trigger('field:editable:open');},onKeyup:function(evt){evt.preventDefault();if(evt.which==27){this.cancelEdits(evt);}else if(evt.which==13||evt.which==9){this.handleEvent(evt);}},cancelEdits:function(evt){this.$el.find(this.inputSelector).val(this.value);this.renderDetail();},onBlur:function(evt){evt.preventDefault();this.handleEvent(evt);},isValid:function(value){var regex=new RegExp("^[+-]?\\d+$");if(_.isNull(value.toString().match(regex))){return{'labelId':'LBL_EDITABLE_INVALID','args':[app.lang.get(this.def.label,'Forecasts')]};}
if(!_.isUndefined(this.def.minValue)&&!_.isUndefined(this.def.maxValue)){if(value<this.def.minValue||value>this.def.maxValue){return{'labelId':'LBL_EDITABLE_INVALID_RANGE','args':[this.def.minValue,this.def.maxValue]};}}
return true;},isEditable:function(){return this._canEdit;},parsePercentage:function(value){var orig=this.value;var parts=value.toString().match(/^([+-]?)(\d+(\.\d+)?)\%$/);if(parts){value=app.math.mul(app.math.div(parts[2],100),orig);if(parts[1]=='+'){value=app.math.add(orig,value);}else if(parts[1]=='-'){value=app.math.sub(orig,value);}
value=app.math.round(value,0);}
return value;},showErrors:function(){var self=this;this.$el.find('.error-message').html(this.errorMessage);this.$el.find('.control-group').addClass('error');this.$el.find('.help-inline.editable-error').removeClass('hide').addClass('show');this.$el.find('.btn.btn-danger').on("click",function(evt){self.cancelEdits.call(self,evt);});}})