/*********************************************************************************
 * By installing or using this file, you are confirming on behalf of the entity
 * subscribed to the SugarCRM Inc. product ("Company") that Company is bound by
 * the SugarCRM Inc. Master Subscription Agreement (“MSA”), which is viewable at:
 * http://www.sugarcrm.com/master-subscription-agreement
 *
 * If Company is not bound by the MSA, then by installing or using this file
 * you are agreeing unconditionally that Company will be bound by the MSA and
 * certifying that you have authority to bind Company accordingly.
 *
 * Copyright (C) 2004-2013 SugarCRM Inc.  All rights reserved.
 ********************************************************************************/
({componentsMeta:{},initDataModel:{},initialize:function(options){this.componentsMeta=options.meta.components;options.context=_.extend(options.context,this.initializeAllModels());var ConfigModel=Backbone.Model.extend({url:app.api.buildURL("Forecasts","config"),sync:function(method,model,options){var url=_.isFunction(model.url)?model.url():model.url;return app.api.call(method,url,model,options);},defaults:app.metadata.getModule('Forecasts').config});options.context.forecasts.config=new ConfigModel();var defaultSelections=app.defaultSelections;options.context.forecasts.set({selectedTimePeriod:defaultSelections.timeperiod_id,selectedRanges:defaultSelections.ranges,selectedGroupBy:defaultSelections.group_by,selectedDataSet:defaultSelections.dataset,selectedUser:defaultSelections.selectedUser,reloadWorksheetFlag:false,currentWorksheet:"",updatedTotals:{},updatedManagerTotals:{},saveClicked:false,reloadCommitButton:false,commitForecastFlag:false,hiddenSidebar:false});this.initDataModel=app.initData;app.initData=null;app.view.Layout.prototype.initialize.call(this,options);},loadData:function(){this.fetchAllModels();},fetchAllModels:function(){var self=this;_.each(this.componentsMeta,function(component){if(component.model&&component.model.name){self.context.forecasts[component.model.name.toLowerCase()].fetch();}
if(component.contextCollection&&component.contextCollection.name){self.context.forecasts[component.contextCollection.name.toLowerCase()].fetch();}
if(component.collection&&component.collection.name){self.context.forecasts[component.collection.name.toLowerCase()].fetch();}});},initializeAllModels:function(existingModel){var self=this,componentsMetadata=this.componentsMeta,module=app.viewModule.toLowerCase(),models={},existingModel=existingModel||{};if(_.isUndefined(existingModel[module])){models[module]=app.data.createBean(module);self.namespace(models,module);}else{models[module]=existingModel[module];}
_.each(componentsMetadata,function(component){var name,modelMetadata=component.model,context=component.contextCollection,collectionMetadata=component.collection;if(modelMetadata){name=modelMetadata.name.toLowerCase();self.namespace(models,module);models[module][name]=self.createModel(modelMetadata,app.viewModule);}
if(context){var name=context.name.toLowerCase();var moduleContext=context.module;self.namespace(models,module);models[module][name]=self.createCollection();}
if(collectionMetadata){name=collectionMetadata.name.toLowerCase();self.namespace(models,module);models[module][name]=self.createCollection();models[module][name].url=app.config.serverUrl+'/'+app.viewModule+'/'+name;}});return models;},createModel:function(modelMetadata,module){var Model=Backbone.Model.extend({sync:function(method,model,options){myURL=app.api.buildURL(module,modelMetadata.name.toLowerCase());return app.api.call(method,myURL,null,options);}});return new Model();},createCollection:function(){var Collection=Backbone.Collection.extend({model:Backbone.Model.extend({sync:function(method,model,options){var url=_.isFunction(model.url)?model.url():model.url;return app.api.call(method,url,model,options);}}),sync:function(method,model,options){var url=_.isFunction(model.url)?model.url():model.url;return app.api.call(method,url,null,options);}});return new Collection();},namespace:function(target,namespace){if(!target[namespace]){target[namespace]={};}},_placeComponent:function(comp){var compName=comp.name||comp.meta.name,divName=".view-"+compName;if(_.has(comp,'meta')&&!_.isUndefined(comp.meta)&&_.has(comp.meta,'placeInLayout')&&comp.meta.placeInLayout==false){return;}
if(!this.$el.children()[0]){this.$el.addClass("complex-layout");}
if(compName&&this.$el.find(divName)[0]){this.$el.find(divName).append(comp.$el);}else{this.$el.append(comp.$el);}},_render:function(){app.view.Layout.prototype._render.call(this);app.alert.init();return this;}})